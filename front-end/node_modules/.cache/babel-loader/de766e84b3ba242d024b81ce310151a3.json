{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sy Trung\\\\Desktop\\\\twitter-project\\\\front-end\\\\src\\\\components\\\\PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useContext } from 'react';\nimport PostItem from './PostItem';\nimport '../css/Post.css';\nimport axios from 'axios';\nimport AppContext from './AppContext';\nimport test from './test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostList() {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const {\n    posts,\n    user\n  } = state;\n  const getAllPost = useCallback(async () => {\n    try {\n      const option = {\n        method: \"get\",\n        url: \"/api/v1/posts\"\n      };\n      const response = await axios(option);\n      const posts = response.data.data.posts;\n      dispatch({\n        type: \"GET_ALL_POST\",\n        payload: posts\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    getAllPost();\n  }, [getAllPost]);\n  const newPosts = posts.map(post => {\n    if (user) {\n      return post.author.name === user.userName ? { ...post,\n        isEditable: true\n      } : post;\n    } else {\n      return { ...post,\n        isEditable: false\n      };\n    }\n  });\n  console.log('newpost', newPosts);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: newPosts.map(post => {\n        /*#__PURE__*/\n        _jsxDEV(PostItem, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this);\n\n        /*#__PURE__*/\n        _jsxDEV(\"test\", {\n          data: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostList, \"riX1gSyi4F+zrJCZ78VZj5lclW8=\");\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["C:/Users/Sy Trung/Desktop/twitter-project/front-end/src/components/PostList.js"],"names":["React","useEffect","useCallback","useContext","PostItem","axios","AppContext","test","PostList","state","dispatch","posts","user","getAllPost","option","method","url","response","data","type","payload","error","console","log","newPosts","map","post","author","name","userName","isEditable","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,WAAxB,EAAqCC,UAArC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBP,UAAU,CAACG,UAAD,CAAnC;AACA,QAAM;AAACK,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAeH,KAArB;AACA,QAAMI,UAAU,GAAGX,WAAW,CAC1B,YAAW;AACP,QAAG;AACC,YAAMY,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE,KADG;AAEXC,QAAAA,GAAG,EAAC;AAFO,OAAf;AAIA,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACS,MAAD,CAA5B;AACA,YAAMH,KAAK,GAAGM,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBP,KAAjC;AACAD,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAC,cAAN;AAAqBC,QAAAA,OAAO,EAACT;AAA7B,OAAD,CAAR;AACH,KARD,CAQC,OAAMU,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAbyB,EAaxB,CAACX,QAAD,CAbwB,CAA9B;AAcAT,EAAAA,SAAS,CAAC,MAAK;AACXY,IAAAA,UAAU;AACb,GAFQ,EAEP,CAACA,UAAD,CAFO,CAAT;AAGA,QAAMW,QAAQ,GAAGb,KAAK,CAACc,GAAN,CAAWC,IAAD,IAAS;AAChC,QAAGd,IAAH,EAAQ;AACJ,aAAOc,IAAI,CAACC,MAAL,CAAYC,IAAZ,KAAqBhB,IAAI,CAACiB,QAA1B,GACL,EAAC,GAAGH,IAAJ;AAASI,QAAAA,UAAU,EAAC;AAApB,OADK,GAENJ,IAFD;AAIH,KALD,MAKK;AACD,aAAM,EAAC,GAAGA,IAAJ;AAASI,QAAAA,UAAU,EAAC;AAApB,OAAN;AACH;AACJ,GATgB,CAAjB;AAUAR,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBC,QAAtB;AACA,sBACI;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKA,QAAQ,CAACC,GAAT,CAAcC,IAAD,IAAS;AACnB;AAAA,gBAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB,WAA2BA,IAAI,CAACK,GAAhC;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AACH,OAHA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAzCQvB,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React,{useEffect,useCallback, useContext} from 'react';\r\nimport PostItem from './PostItem';\r\nimport '../css/Post.css';\r\nimport axios from 'axios';\r\nimport AppContext from './AppContext';\r\nimport test from './test';\r\nfunction PostList() {\r\n    const {state,dispatch} = useContext(AppContext);\r\n    const {posts,user} = state;\r\n    const getAllPost = useCallback(\r\n        async () =>{\r\n            try{\r\n                const option = {\r\n                    method: \"get\",\r\n                    url:\"/api/v1/posts\",\r\n                };\r\n                const response = await axios(option);\r\n                const posts = response.data.data.posts;\r\n                dispatch({type:\"GET_ALL_POST\",payload:posts})\r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        },[dispatch])\r\n    useEffect(() =>{\r\n        getAllPost( )\r\n    },[getAllPost])\r\n    const newPosts = posts.map((post) =>{\r\n        if(user){\r\n            return post.author.name === user.userName\r\n            ? {...post,isEditable:true}\r\n            :post;\r\n\r\n        }else{\r\n            return{...post,isEditable:false};\r\n        }\r\n    });\r\n    console.log('newpost',newPosts);\r\n    return (\r\n        <section className=\"post-section\">\r\n            <div className=\"post-list\">\r\n                {newPosts.map((post) =>{\r\n                    <PostItem post={post} key={post._id}/>;\r\n                    <test data=\"hello\" />\r\n                })}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PostList;"]},"metadata":{},"sourceType":"module"}