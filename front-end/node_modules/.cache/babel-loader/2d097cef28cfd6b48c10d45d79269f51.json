{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sy Trung\\\\Desktop\\\\twitter-project\\\\front-end\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport '../css/Form.css';\nimport axios from 'axios';\nimport AppContext from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  console.log('state', state);\n  const {\n    user\n  } = state;\n  const [postInput, setPostInput] = useState({\n    content: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n  console.log('postInput', postInput);\n\n  const onSubmitHandle = async e => {\n    console.log('hihi');\n\n    try {\n      e.preventDefalt();\n      const token = localStorage.getItem(\"token\");\n      const option = {\n        method: \"post\",\n        url: `/api/v1/posts/`,\n        data: postInput,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios(option);\n      console.log('response', response);\n      const {\n        post\n      } = response.data.data;\n      const author = {\n        _id: post.author,\n        name: user.userName\n      };\n      dispatch({\n        type: \"CREATE_ONE_POST\",\n        payload: { ...post,\n          author,\n          isEditable: true\n        }\n      });\n      setPostInput({\n        content: \"\"\n      });\n    } catch (error) {\n      setErrorMessage(error.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form-section\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: () => onSubmitHandle(),\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Error:\", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"content\",\n        id: \"content\",\n        className: \"content\",\n        value: postInput.content,\n        onChange: e => setPostInput({ ...postInput,\n          [e.target.name]: e.target.value\n        }),\n        placeholder: \"what is happening?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"button\",\n        onClick: onSubmitHandle,\n        children: \"twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"ZiJCYmkS53yeZhmfMr+QESPvVQ8=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Sy Trung/Desktop/twitter-project/front-end/src/components/Form.js"],"names":["React","useContext","useState","axios","AppContext","Form","state","dispatch","console","log","user","postInput","setPostInput","content","errorMessage","setErrorMessage","onSubmitHandle","e","preventDefalt","token","localStorage","getItem","option","method","url","data","headers","Authorization","response","post","author","_id","name","userName","type","payload","isEditable","error","message","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport '../css/Form.css';\r\nimport axios from 'axios';\r\nimport AppContext from './AppContext';\r\nfunction Form() {\r\n    const {state,dispatch} = useContext(AppContext);\r\n    console.log('state',state);\r\n    const {user} = state;\r\n    const [postInput,setPostInput] = useState({content:\"\"});\r\n    const [errorMessage,setErrorMessage] = useState(null);\r\n    console.log('postInput',postInput);\r\n    const onSubmitHandle = async (e) =>{\r\n        console.log('hihi');\r\n        try{\r\n            e.preventDefalt();\r\n            const token = localStorage.getItem(\"token\");\r\n            const option ={\r\n                method:\"post\",\r\n                url:`/api/v1/posts/`,\r\n                data:postInput,\r\n                headers: {\r\n                    Authorization:`Bearer ${token}`,\r\n                },\r\n            };\r\n            const response = await axios(option);\r\n            console.log('response',response);\r\n            const {post} = response.data.data;\r\n            const author = {_id:post.author,name:user.userName};\r\n            dispatch({\r\n                type:\"CREATE_ONE_POST\",\r\n                payload:{...post,author,isEditable:true}\r\n            });\r\n            setPostInput({content:\"\"});\r\n        }catch(error){\r\n                setErrorMessage(error.response.data.message);\r\n        }\r\n        };\r\n    return (\r\n        <section className=\"form-section\">\r\n            <form className=\"form\" onSubmit={() =>onSubmitHandle()}>\r\n                {errorMessage &&(\r\n                    <div className=\"error-message\">Error:{errorMessage}</div>\r\n                )}\r\n                <textarea\r\n                type=\"text\"\r\n                name=\"content\"\r\n                id=\"content\"\r\n                className=\"content\"\r\n                value = {postInput.content}\r\n                onChange ={(e) =>\r\n                setPostInput({ ...postInput,[e.target.name]:e.target.value})\r\n                }\r\n                placeholder=\"what is happening?\">\r\n                </textarea>\r\n                <button className=\"btn\" type =\"button\" onClick={onSubmitHandle}>twitter</button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}