{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sy Trung\\\\Desktop\\\\twitter-project\\\\front-end\\\\src\\\\components\\\\PostItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport AppContext from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostItem(props) {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(AppContext);\n  const [postToEdit, setPostToEdit] = useState(props.data);\n  const [openEditForm, setOpenEditForm] = useState(false);\n  const [OpenDeleteConfirm, setOpenDeleteConfirm] = useState(false);\n  let date = new Date(props.data.createdAt);\n  console.log('postToEdit', postToEdit);\n\n  const updatePost = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const option = {\n        method: \"put\",\n        url: `/api/v1/posts/${props.data._id}`,\n        data: postToEdit,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      await axios(option);\n      dispatch({\n        type: \"UPDATE_ONE_POST\",\n        payload: { ...postToEdit\n        }\n      });\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: props.data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-infors\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.data.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), props.data.isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-edit-delete\",\n        children: OpenDeleteConfirm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delete-question\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setOpenDeleteConfirm(false),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setOpenEditForm(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setOpenDeleteConfirm(true),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), openEditForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"content\",\n          id: \"content\",\n          className: \"content\",\n          value: postToEdit.content,\n          onChange: e => setPostToEdit({ ...postToEdit,\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"button\",\n            onClick: updatePost,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"button\",\n            onClick: () => setOpenEditForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostItem, \"/Auz6mGtUbNdzVuD3Rhwfs/QSWk=\");\n\n_c = PostItem;\nexport default PostItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["C:/Users/Sy Trung/Desktop/twitter-project/front-end/src/components/PostItem.js"],"names":["React","useContext","useState","axios","AppContext","PostItem","props","dispatch","postToEdit","setPostToEdit","data","openEditForm","setOpenEditForm","OpenDeleteConfirm","setOpenDeleteConfirm","date","Date","createdAt","console","log","updatePost","token","localStorage","getItem","option","method","url","_id","headers","Authorization","type","payload","error","response","content","author","name","getDate","getMonth","getFullYear","isEditable","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport AppContext from './AppContext';\r\nfunction PostItem(props) {\r\n    const {dispatch} = useContext(AppContext);\r\n    const [postToEdit,setPostToEdit] = useState(props.data);\r\n    const [openEditForm,setOpenEditForm] = useState(false);\r\n    const [OpenDeleteConfirm,setOpenDeleteConfirm] =useState(false)\r\n    let date = new Date(props.data.createdAt);\r\n    console.log('postToEdit',postToEdit);\r\n    const updatePost = async () =>{\r\n        try{\r\n            const token = localStorage.getItem(\"token\");\r\n            const option ={\r\n                method:\"put\",\r\n                url:`/api/v1/posts/${props.data._id}`,\r\n                data:postToEdit,\r\n                headers: {\r\n                    Authorization:`Bearer ${token}`,\r\n                },\r\n            };\r\n            await axios(option);\r\n            dispatch({\r\n                type:\"UPDATE_ONE_POST\",\r\n                payload:{ ...postToEdit},\r\n            });\r\n        }catch(error){\r\n            console.log(error.response);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"post-item\">\r\n        <p className=\"post-content\">\r\n           {props.data.content}\r\n        </p>\r\n        <div className=\"post-footer\">\r\n            <div className=\"post-infors\">\r\n                <span>{props.data.author.name}</span>\r\n                <span>{`${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`}</span>\r\n            </div>\r\n            {props.data.isEditable &&(\r\n                <div className=\"post-edit-delete\">\r\n                    {OpenDeleteConfirm ? (\r\n                        <>\r\n                        <span className=\"delete-question\">Are you sure?</span>\r\n                        <span>Yes</span>\r\n                        <span onClick={()=> setOpenDeleteConfirm(false)}>No</span>\r\n                        </>\r\n                    ):(\r\n                        <>\r\n                        <span onClick = {() =>setOpenEditForm(true)}>Edit</span>\r\n                        <span onClick = {()=> setOpenDeleteConfirm(true)}>Delete</span>                      \r\n                        </>\r\n                    )}\r\n            </div> \r\n            )}\r\n        </div>\r\n        {openEditForm&&(\r\n            <>\r\n            <div className=\"post-edit-form\">\r\n            <textarea\r\n            type =\"text\"\r\n            name =\"content\"\r\n            id =\"content\"\r\n            className=\"content\"\r\n            value ={postToEdit.content}\r\n            onChange={(e) =>\r\n            setPostToEdit({ ...postToEdit, content:e.target.value})\r\n            }\r\n            />\r\n            \r\n            <div className=\"btn-container\">\r\n                <button className=\"btn\" type =\"button\" onClick={updatePost}>Update</button>\r\n                <button className=\"btn\" type =\"button\" onClick={() =>setOpenEditForm(false)}>Cancel</button>\r\n            </div>\r\n            </div>\r\n            </>\r\n        )}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default PostItem;"]},"metadata":{},"sourceType":"module"}